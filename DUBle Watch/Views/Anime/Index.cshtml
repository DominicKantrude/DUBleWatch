@model IEnumerable<DUBle_Watch.Models.Anime>

@{
    ViewData["Title"] = "Index";
}


<p>
    <a asp-action="Create">Create New</a>
</p>
<section class="border backgroud-silver">
    <div class="flex-coontainer-space-between anime-top-container justify-content-between">
        <div>
            <a asp-action="SortByGenre" asp-controller="Anime" class="padding-sides-20">Genre</a> |
            <a asp-action="SortByRating" asp-controller="Anime" class="padding-sides-20">Rating</a> |
            <a asp-action="SortByNewest" asp-controller="Anime" class="padding-sides-20">Newest</a>
        </div>
        <div class="flex-end">
            @using (Html.BeginForm("SearchByCity", "Products", FormMethod.Get))
            {
                @Html.TextBox("Search")

                <input type="submit" value="Search" />

            }
            </div>
        </div>
   
    <section class="flex-container">
        @foreach (var item in Model)
        {
            <a asp-action="Details" asp-route-id="@item.AnimeId">
                <div class="flex-column card">
                    <div>
                        <img src="/images/@item.ImagePath" class="animetDetailImage">
                    </div>

                    <div class="anime-title">
                        @Html.DisplayFor(modelItem => item.Name)
                    </div>
                    <div class="anime-card-text">
                        @Html.DisplayFor(modelItem => item.Genre.Name)
                    </div>
                    <div class="anime-card-text">
                        Episodes:
                        @Html.DisplayFor(modelItem => item.CurrentLastEpisode)
                        <div class="plus-sign">
                            <form asp-action="AddToTracked" asp-route-id="@item.AnimeId"><button type="submit" class="btn"><i class="fas fa-plus"></i></button></form>
                        </div>
                    </div>
                    

                </div>
            </a>
        }
    </section>
</section>
